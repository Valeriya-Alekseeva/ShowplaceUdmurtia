(function(global){

    'use strict';

    global.URBANABRU = global.URBANABRU || {};

    /**
     * Создает новое пространство имен в приложении по его имени, если его еще нет ().
     * @param namespace
     */
    global.URBANABRU.namespace = function(namespace){
        var parts = namespace.split('.'),
            parent = global.URBANABRU,
            i;

        if (parts[0] === 'URBANABRU') {
            parts = parts.slice(1);
        }

        for (i = 0; i < parts.length; i++) {
            if (typeof parent[parts[i]] === 'undefined') {
                parent[parts[i]] = {};
            }

            parent = parent[parts[i]];
        }

        return parent;
    };
}(window));
window.URBANABRU.namespace('svgMask');

window.URBANABRU.svgMask = (function(global, app, Snap){

    function SvgClip(svgId, images, clipPath, insertIndex, viewBox, imgAttr){

        this.paper = Snap('#' + svgId);
        this.path = clipPath;
        this.images = images;
        this.viewBox = viewBox;
        this.svgSlides = [];

        if (imgAttr) {

            if (imgAttr.hasOwnProperty('offsetX')) {
                this.viewBox[0] = imgAttr.offsetX;
            }

            if (imgAttr.hasOwnProperty('offsetY')) {
                this.viewBox[1] = imgAttr.offsetY
            }
        }

        var imagesLength = this.images.length,
            slidesDestination = this.paper.select('path:nth-child('+insertIndex+')');

        for (var i=0; i<imagesLength; i++) {

            var slide = {
                image: this.paper.image(this.images[i], this.viewBox[0], this.viewBox[1], 2200, 1170),
                maskPath: this.paper.path(this.path).attr({fill: '#fff'})
            };

            slide['image'].attr({
                mask: slide['maskPath'],
                opacity: 0
            });

            slide['image'].insertAfter(slidesDestination);

            this.svgSlides.push(slide);
        }

        this.svgSlides[imagesLength-1]['image'].animate({opacity: 1}, 1000);
    }

    SvgClip.prototype.changeSlide = function(index){

        var oldItem = this.paper.select('image[style*="opacity: 1"]'),
            newItem = this.paper.select('image:nth-of-type('+(index+1)+')');

        oldItem.animate({opacity: 0}, 300);
        newItem.animate({opacity: 1}, 300);
    };

    var init = function(params){

        var svgId = params.id,
            images = params.src,
            clipPath = params.clipPath,
            insertIndex = params.insertIndex,
            viewBox = params.viewBox.split(' '),
            imgAttr = params.imgAttr || null;

        return new SvgClip(svgId, images, clipPath, insertIndex, viewBox, imgAttr);
    };

    return {
        init: init
    }
}(window, window.URBANABRU, window.Snap));
window.URBANABRU.namespace('choiceSlider');

window.URBANABRU.choiceSlider = (function(global, app, $){

    var slider,
        nav,
        sliderLength,
        sliderActiveClass = 'editor-choice__header--active',
        navActiveClass = 'editor-choice-nav__button--active';

    var onNavClick = function(svgMask, event){

        var clickIndex = $(event.target).index();

        slider.children('.'+sliderActiveClass).removeClass(sliderActiveClass);
        slider.children(':eq('+clickIndex+')').addClass(sliderActiveClass);

        nav.children('.'+navActiveClass).removeClass(navActiveClass);
        nav.children(':eq('+clickIndex+')').addClass(navActiveClass);

        svgMask.changeSlide(clickIndex);
    };

    var init = function(element, svgMask){

        slider = element.children();
        nav = slider.siblings('.editor-choice-nav');
        sliderLength = slider.children().length;

        for (var i=0; i<sliderLength; i++) {
            var buttonClass = 'editor-choice-nav__button';
            if (i == 0) {
                buttonClass += ' ' + navActiveClass;
            }
            nav.append('<button class="'+buttonClass+'"></button>')
        }

        nav.children().on('click', onNavClick.bind(undefined, svgMask));
    };

    return {
        init: init
    }
}(window, window.URBANABRU, window.jQuery));
﻿(function (global, app, $) {

    /*$(function () {
        // Logo random color change
        var logo = $('.js-logo'),
            logoColorize = $('.js-logo-colorize'),
            logoColors = logoColorize.data('colors').split(' ');
        logo.on('mouseenter touchstart', function (event) {
            var currentColor = logoColorize.data('color') || '',
                randomColor;
            while ((randomColor = logoColors[Math.floor(Math.random() * logoColors.length)]) == currentColor) { }
            logoColorize[0].className = logoColorize[0].className.replace(/\b logotype__colored--\S+/g, '');
            logoColorize.addClass('logotype__colored--' + randomColor);
        }).trigger('mouseenter');
    });*/

    var svgSlider = $('#svg-slider');
    if (svgSlider.length) {

        app.choiceSlider.init(
            $('.js-editor-slider'),
            app.svgMask.init({
                id: svgSlider.attr('id'),
                src: svgSlider.data('src'),
                clipPath: svgSlider.data('clip-path'),
                insertIndex: 3,
                viewBox: svgSlider[0].getAttribute('viewBox'),
                imgAttr: {
                    offsetY: 0
                }
            })
        );
    }

    var svgInterview = $('#svg-interview');
    if (svgInterview.length) {

        app.svgMask.init({
            id: svgInterview.attr('id'),
            src: svgInterview.data('src'),
            clipPath: svgInterview.data('clip-path'),
            insertIndex: 2,
            viewBox: svgInterview[0].getAttribute('viewBox')
        });
    }


    var svgForm = $('#svg-form');
    if (svgForm.length) {

        app.svgMask.init({
            id: svgForm.attr('id'),
            src: svgForm.data('src'),
            clipPath: svgForm.data('clip-path'),
            insertIndex: 2,
            viewBox: svgForm[0].getAttribute('viewBox')
        });
    }

    var svgBanner = $('#svg-banner');

    if (svgBanner.length) {
        app.svgMask.init({
            id: svgBanner.attr('id'),
            src: svgBanner.data('src'),
            clipPath: svgBanner.data('clip-path'),
            insertIndex: 2,
            viewBox: svgBanner[0].getAttribute('viewBox')
        });
    }

    // карусель
    $('.js-owl-carousel').owlCarousel({
        items: 3,
        itemsDesktop: 2,
        itemsDesktopSmall: 2,
        navigation: true,
        pagination: false
    });

    // текстареа
    global.autosize($('textarea'));

}(window, window.URBANABRU, window.jQuery));